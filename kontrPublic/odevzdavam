#!/packages/run/links/bin/perl -I/home/xtoth1/kontrPublic


use StudentInfo;
use Try::Tiny;
use utf8;
use Moose::Util::TypeConstraints;
use Types;
use FISubmission;
use FIHomework;
no utf8;

# required parameters: class homework type (source) (revision)
if (scalar @ARGV != 3 and scalar @ARGV != 4)
{
	printf	"Tento skript vyžaduje přesně tři parametry.\n".
		"\t* předmět (pb071 pro cecko, pb161 pro cpp)\n".
		"\t* domácí úkol (hwXX)\n".
		"\t* typ odevzdání (nanecisto, naostro)\n";

	exit 1;
}

chdir "/home/xtoth1/kontrPublic";

my $class = $ARGV[0];
my $homework = $ARGV[1];
my $type = $ARGV[2];

# validate parameters
if (not find_type_constraint('SubmissionClass')->check($class))
{
	printf	"Podporované hodnoty pro předmět jsou:\n".
		"\t* pb071 - Uvod do jazyka C\n".
		"\t* pb161 - Programovani v jazyce C++\n";

	exit 1;
}

if (not find_type_constraint('SubmissionMode')->check($type))
{
	printf	"Podporované hodnoty pro typ odevzdání:\n".
		"\t* nanecisto\n".
		"\t* naostro\n";

	exit 1;
}

my $info;
my $login;
try {
	$login = getlogin || getpwuid($<) || "Anonymous";
	$info = new StudentInfo(login => $login, class => $class);
} catch {
	printf  "Nejste zadaven v systému automatických oprav, nebo je v databázi chyba.\n".
		"Kontaktujte prosím správce (toth\@fi.muni.cz) a přiložte následující text:\n\n\n";
	printf $_;
} finally {
	my $h = new FIHomework(name => $homework, class => $class);
	my $s = new FISubmission(user => $info, homework => $h, mode => $type);
	if ($info->is_special())
	{
		printf "Detekován speciální uživatel. Test otevřeného úkolu a zpoždění při opravě přeskočeno.\n\n"; 
	}
	elsif (not $h->is_opened($type))
	{
		die "Odevzdávání domácího úkolu \"$homework\" v režimu \"$type\" zatím není otevřeno studentům.\n";
	}
	if ($s->is_submitted) {
		printf "Tento domácí úkol máte již v tomto režimu odevzdán.\n";
		printf "Pokud již uběhlo více jak 30 minut, tak prosíme kontaktujte správce (toth\@fi.muni.cz) s detaily (především aktuální čas, váš login, domácí úkol a typ odevzdání.";
		exit 1;
	}
	if ($s->is_corrected) {
		printf "Tento domácí úkol byl v tomto režimu před krátkou dobou vyhodnocen.\n";
		printf "Další odevzdání bude možné až po ".$s->until." UTC.\n";
		exit 1;
	}
	if (not $info->is_special() and not $s->can_submit) {
		printf "Domácí úkol nemůžete odevzdat.\n";
		exit 1;
	}
	if ($info->is_special and scalar @ARGV == 4) {
		printf "Odevzdání za studenta ".$ARGV[3]."\n";
		$s->config->{SVN} = { source => $ARGV[3] };
	}

	printf "Probíhá odevzdání domácího úkolu \"$homework\" v režimu \"$type\".\n\n";
	printf "Student detekován jako: '".$info->name."' UČO: '".$info->uco."' email: '".$info->email."' unix login: '".$info->login."'\n";
	printf "Student patří pod: '".$info->teacher->name."' UČO: '".$info->teacher->uco."' email: '".$info->teacher->email."' unix login: '".$info->teacher->login."'\n"  unless $info->is_special;
	printf "Pokud je některý z údajů nesprávný, okamžitě kontaktujte správce kontru.\n\n";

	printf "Odevzdání můžete do méně jak 5 minut zrušit pomocí příkazu \"neodevzdavam\" s identickými parametry.\n";
	printf "Příjemný den a hodně štěstí přeje automatický systém oprav domácích úkolů.\n";

	if (not $s->submit()) {
		printf "Domácí úkol se nepovedlo odevzdat; zkontrolujte, jestli jste nepřekročili vlastní kvótu. Pokud ne, tak kontaktujte, prosím, správce (toth\@fi.muni.cz) a přiložte následující údaje:\n\n\n";
		printf join (' ', @ARGV);
	}
}
